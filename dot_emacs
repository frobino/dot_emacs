(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-enabled-themes (quote (manoj-dark)))
 '(inhibit-startup-screen t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 ;; NOTE: down here modify height to increase size characters, depending on your screen resolution.
 '(default ((t (:family "DejaVu Sans Mono" :foundry "unknown" :slant normal :weight normal :height 83 :width normal)))))

 ;; MELPA packages 
(require 'package)
(add-to-list 'package-archives
	     '("melpa-stable" . "http://stable.melpa.org/packages/") t)
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(package-initialize)

;; Function to jump to minibuffer
;;
;; enable (windmove-default-keybindings),
;; then you can select the minibuffer simply by typing S-<down>
;; or:
(defun switch-to-minibuffer-window ()
  "switch to minibuffer window (if active)"
  (interactive)
  (when (active-minibuffer-window)
    (select-window (active-minibuffer-window))))

(global-set-key (kbd "<f7>") 'switch-to-minibuffer-window)

;;
;; grep and find for Windows - uncomment the following:
;; (when (or (eq system-type 'windows-nt) (eq system-type 'msdos))
;;    (setenv "PATH" (concat "C:\\GNU\\gnuwin32\\bin;" (getenv "PATH")))
;;    (setq find-program "E:\\cygwin64\\bin\\find.exe"
;;          grep-program "E:\\cygwin64\\bin\\grep.exe"))
;;
;; if the folder containing exe files contains spaces:
;; (setq find-program "C:\\\"Program Files (x86)\"\\GnuWin32\\bin\\find.exe"
;;  grep-program "C:\\\"Program Files (x86)\"\\GnuWin32\\bin\\grep.exe")
;;

;;
;; General code configuration (always active)
;;

(load "~/.emacs.d/emacs_all_config")

;;
;; C code configuration
;;

(load "~/.emacs.d/emacs_c_code_config") ;; emacs_c_code_config.el

;;
;; VHDL code configuration
;;

(add-hook 'vhdl-mode-hook (lambda () (load "~/.emacs.d/emacs_vhdl_code_config")))

;;
;; HASKELL code configuration
;;

(load "~/.emacs.d/emacs_haskell_code_config") ;; emacs_haskell_code_config.el
